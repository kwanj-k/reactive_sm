{"ast":null,"code":"import _objectSpread from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport ImageUploader from '../../../utils/ImageUploader';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\nvar CreateArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateArticle, _Component);\n\n  function CreateArticle(props) {\n    var _this;\n\n    _classCallCheck(this, CreateArticle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateArticle).call(this, props));\n\n    _this.publishArticle = function () {\n      var article = _this.state.article.article;\n      var saveArticle = _this.props.saveArticle;\n      saveArticle(_objectSpread({}, article));\n    };\n\n    _this.handleUpload = function (e) {\n      var selectFile = e.target.files[0];\n      ImageUploader({\n        image: selectFile\n      }).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          image: res.data.secure_url\n        });\n      });\n    };\n\n    _this.state = {\n      article: {\n        title: '',\n        body: '',\n        description: '',\n        slug: ''\n      },\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(CreateArticle, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Dante, {\n        data_storage: {\n          interval: 500,\n          url: ImageUploader.path,\n          method: 'POST',\n          save_handler: this.handleSave\n        },\n        widgets: [ImageBlockConfig({\n          upload_callback: this.handleUpload,\n          upload_handler: this.handleUpload\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.publishArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"PUBLISH\"));\n    }\n  }]);\n\n  return CreateArticle;\n}(Component);\n\nCreateArticle.propTypes = {\n  saveArticle: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    article: state.article,\n    errors: state.errors\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  saveArticle: saveArticle\n})(CreateArticle));","map":{"version":3,"sources":["/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js"],"names":["React","Component","connect","withRouter","PropTypes","Button","Dante","ImageBlockConfig","ImageUploader","saveArticle","CreateArticle","props","publishArticle","article","state","handleUpload","e","selectFile","target","files","image","then","res","console","log","setState","data","secure_url","title","body","description","slug","errors","interval","url","path","method","save_handler","handleSave","upload_callback","upload_handler","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport ImageUploader from '../../../utils/ImageUploader';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\n\nclass CreateArticle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        article: {\n            title: '',\n            body: '',\n            description: '',\n            slug: '',\n        },\n        errors: {}\n    };\n  }\n\n  publishArticle = () => {\n    const { article } = this.state.article;\n    const { saveArticle } = this.props;\n    saveArticle({ ...article})\n  };\n\n  handleUpload = e => {\n    const selectFile = e.target.files[0];\n    ImageUploader({ image: selectFile }).then((res) =>{\n        console.log(res)\n      this.setState({\n        image: res.data.secure_url\n      })\n    }\n    );\n  };\n  render() {\n      console.log(this.props)\n    return (\n      <div >\n        <Dante\n\n            data_storage={{\n                interval: 500,\n                url: ImageUploader.path,\n                method: 'POST',\n                save_handler: this.handleSave,\n            }}\n            widgets={[\n                ImageBlockConfig({\n                upload_callback: this.handleUpload,\n                upload_handler: this.handleUpload\n                })\n          ]}\n        />\n        <Button onClick={ this.publishArticle}>PUBLISH</Button>\n      </div>\n    );\n  }\n}\n\nCreateArticle.propTypes = {\n    saveArticle: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n  };\nconst mapStateToProps = state => ({\n    article: state.article,\n    errors: state.errors\n  });\n\n  export default withRouter(\n    connect(\n      mapStateToProps,\n      { saveArticle }\n    )(CreateArticle)\n  );\n"]},"metadata":{},"sourceType":"module"}