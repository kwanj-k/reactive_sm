{"ast":null,"code":"import _objectSpread from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport ImageUploader from '../../../utils/ImageUploader';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\nvar CreateArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateArticle, _Component);\n\n  function CreateArticle(props) {\n    var _this;\n\n    _classCallCheck(this, CreateArticle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateArticle).call(this, props));\n\n    _this.publishArticle = function () {\n      var article = _this.state.article.article;\n      var saveArticle = _this.props.saveArticle; //console.log(article)\n\n      saveArticle(_objectSpread({}, article));\n    };\n\n    _this.handleUpload = function (file, state) {\n      upload({\n        body: file,\n        progress: function progress(e) {\n          state.updateProgressBar(e);\n        }\n      }).then(function (data) {\n        state.uploadCompleted(data.secure_url);\n      });\n    };\n\n    _this.onImageChange = function (image) {\n      _this.setState({\n        chosenImage: image\n      });\n\n      var article = _this.state.article;\n\n      _this.setState({\n        article: _objectSpread({}, article, {\n          image: image\n        })\n      });\n    };\n\n    _this.state = {\n      article: {\n        title: '',\n        body: '',\n        description: '',\n        slug: '',\n        tags: [],\n        published: false\n      },\n      errors: {},\n      chosenImage: ''\n    };\n    return _this;\n  }\n\n  _createClass(CreateArticle, [{\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Dante, {\n        data_storage: {\n          interval: 500,\n          url: ImageUploader.path,\n          method: 'POST',\n          save_handler: this.handleSave\n        },\n        widgets: [ImageBlockConfig({\n          upload_callback: this.handleUpload,\n          upload_handler: this.handleUpload\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.publishArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"PUBLISH\"));\n    }\n  }]);\n\n  return CreateArticle;\n}(Component);\n\nCreateArticle.propTypes = {\n  saveArticle: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    article: state.article,\n    errors: state.errors\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  saveArticle: saveArticle\n})(CreateArticle));","map":{"version":3,"sources":["/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js"],"names":["React","Component","connect","withRouter","PropTypes","Button","Dante","ImageBlockConfig","ImageUploader","saveArticle","CreateArticle","props","publishArticle","article","state","handleUpload","file","upload","body","progress","e","updateProgressBar","then","data","uploadCompleted","secure_url","onImageChange","image","setState","chosenImage","title","description","slug","tags","published","errors","interval","url","path","method","save_handler","handleSave","upload_callback","upload_handler","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport ImageUploader from '../../../utils/ImageUploader';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\n\nclass CreateArticle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        article: {\n          title: '', body: '', description: '', slug: '', tags: [], published: false,\n        },\n        errors: {},\n        chosenImage: '',\n      };\n  }\n  \n  publishArticle = () => {\n    const { article } = this.state.article;\n    const { saveArticle } = this.props;\n    //console.log(article)\n    saveArticle({ ...article})\n  };\n\n//   handleUpload = e => {\n//     const selectFile = e.target.files[0];\n//     ImageUploader({ image: selectFile }).then((res) =>{\n//         console.log(res)\n//       this.setState({\n//         image: res.data.secure_url\n//       })\n//     }\n//     );\n//   };\n\nhandleUpload = (file, state) => {\n    upload({\n      body: file,\n      progress: (e) => {\n        state.updateProgressBar(e);\n      },\n    })\n      .then((data) => {\n        state.uploadCompleted(data.secure_url);\n      });\n  };\n\nonImageChange = (image) => {\nthis.setState({ chosenImage: image });\nconst { article } = this.state;\nthis.setState({ article: { ...article, image } });\n}\n  render() {\n      //console.log(this.props)\n    return (\n      <div >\n        <Dante\n\n            data_storage={{\n                interval: 500,\n                url: ImageUploader.path,\n                method: 'POST',\n                save_handler: this.handleSave,\n            }}\n            widgets={[\n                ImageBlockConfig({\n                upload_callback: this.handleUpload,\n                upload_handler: this.handleUpload\n                })\n          ]}\n        />\n        <Button onClick={ this.publishArticle}>PUBLISH</Button>\n      </div>\n    );\n  }\n}\n\nCreateArticle.propTypes = {\n    saveArticle: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n  };\nconst mapStateToProps = state => ({\n    article: state.article,\n    errors: state.errors\n  });\n\n  export default withRouter(\n    connect(\n      mapStateToProps,\n      { saveArticle }\n    )(CreateArticle)\n  );\n"]},"metadata":{},"sourceType":"module"}