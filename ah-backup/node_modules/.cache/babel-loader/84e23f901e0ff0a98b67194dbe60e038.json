{"ast":null,"code":"import _objectSpread from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport ImageUploader from '../../../utils/ImageUploader';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\nvar CreateArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateArticle, _Component);\n\n  function CreateArticle(props) {\n    var _this;\n\n    _classCallCheck(this, CreateArticle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateArticle).call(this, props));\n\n    _this.onImageChange = function (image) {\n      _this.setState({\n        chosenImage: image\n      });\n\n      var article = _this.state.article;\n\n      _this.setState({\n        article: _objectSpread({}, article, {\n          image: image\n        })\n      });\n    };\n\n    _this.getImages = function () {\n      var images = [];\n\n      if (_this.editor) {\n        var _this$getEditorConten = _this.getEditorContent(),\n            blocks = _this$getEditorConten.blocks;\n\n        for (var i = 0; i < blocks.length; i += 1) {\n          var image = null;\n\n          if (blocks[i].type === 'image') {\n            var url = blocks[i].data.url;\n            image = url;\n          } else if (blocks[i].type === 'video') {\n            var _JSON$parse = JSON.parse(JSON.stringify(blocks[i].data.embed_data)),\n                thumbNail = _JSON$parse.thumbnail_url;\n\n            image = thumbNail;\n          }\n\n          if (image) {\n            images.push(image);\n          }\n        }\n      }\n\n      return images;\n    };\n\n    _this.getEditorContent = function () {\n      return _this.editor.editor.emitSerializedOutput();\n    };\n\n    _this.publishArticle = function () {\n      var article = _this.state.article.article;\n      var saveArticle = _this.props.saveArticle; //console.log(article)\n\n      saveArticle(_objectSpread({}, article));\n    };\n\n    _this.handleUpload = function (file, state) {\n      upload({\n        body: file,\n        progress: function progress(e) {\n          state.updateProgressBar(e);\n        }\n      }).then(function (data) {\n        state.uploadCompleted(data.secure_url);\n      });\n    };\n\n    _this.state = {\n      article: {\n        title: '',\n        body: '',\n        description: '',\n        slug: '',\n        tags: [],\n        published: false\n      },\n      errors: {},\n      chosenImage: ''\n    };\n    return _this;\n  }\n\n  _createClass(CreateArticle, [{\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Dante, {\n        data_storage: {\n          interval: 500,\n          url: ImageUploader.path,\n          method: 'POST',\n          save_handler: this.handleSave\n        },\n        content: yhiseditorState,\n        widgets: [ImageBlockConfig({\n          upload_callback: this.handleUpload,\n          upload_handler: this.handleUpload\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.publishArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"PUBLISH\"));\n    }\n  }]);\n\n  return CreateArticle;\n}(Component);\n\nCreateArticle.propTypes = {\n  saveArticle: PropTypes.func.isRequired,\n  //errors: PropTypes.object.isRequired,\n  editorState: PropTypes.shape({}).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    article: state.article,\n    errors: state.errors\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  saveArticle: saveArticle\n})(CreateArticle));","map":{"version":3,"sources":["/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js"],"names":["React","Component","connect","withRouter","PropTypes","Button","Dante","ImageBlockConfig","ImageUploader","saveArticle","CreateArticle","props","onImageChange","image","setState","chosenImage","article","state","getImages","images","editor","getEditorContent","blocks","i","length","type","url","data","JSON","parse","stringify","embed_data","thumbNail","thumbnail_url","push","emitSerializedOutput","publishArticle","handleUpload","file","upload","body","progress","e","updateProgressBar","then","uploadCompleted","secure_url","title","description","slug","tags","published","errors","interval","path","method","save_handler","handleSave","yhiseditorState","upload_callback","upload_handler","propTypes","func","isRequired","editorState","shape","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport ImageUploader from '../../../utils/ImageUploader';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\n\nclass CreateArticle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        article: {\n          title: '', body: '', description: '', slug: '', tags: [], published: false,\n        },\n        errors: {},\n        chosenImage: '',\n      };\n  }\n  onImageChange = (image) => {\n    this.setState({ chosenImage: image });\n    const { article } = this.state;\n    this.setState({ article: { ...article, image } });\n  }\n\n//   onImageChange = (image) => {\n//     this.setState({ chosenImage: image });\n//     const { article } = this.state;\n//     this.setState({ article: { ...article, image } });\n//     }\n  \n\n  getImages = () => {\n    const images = [];\n    if (this.editor) {\n      const { blocks } = this.getEditorContent();\n\n      for (let i = 0; i < blocks.length; i += 1) {\n        let image = null;\n        if (blocks[i].type === 'image') {\n          const { data: { url } } = blocks[i];\n          image = url;\n        } else if (blocks[i].type === 'video') {\n          const { thumbnail_url: thumbNail } = JSON.parse(\n            JSON.stringify(blocks[i].data.embed_data),\n          );\n          image = thumbNail;\n        }\n\n        if (image) {\n          images.push(image);\n        }\n      }\n    }\n    return images;\n  };\n\n  getEditorContent = () => this.editor.editor.emitSerializedOutput();\n\n  publishArticle = () => {\n    const { article } = this.state.article;\n    const { saveArticle } = this.props;\n    //console.log(article)\n    saveArticle({ ...article})\n  };\n//   handleUpload = e => {\n//     const selectFile = e.target.files[0];\n//     ImageUploader({ image: selectFile }).then((res) =>{\n//         console.log(res)\n//       this.setState({\n//         image: res.data.secure_url\n//       })\n//     }\n//     );\n//   };\n\nhandleUpload = (file, state) => {\n    upload({\n      body: file,\n      progress: (e) => {\n        state.updateProgressBar(e);\n      },\n    })\n      .then((data) => {\n        state.uploadCompleted(data.secure_url);\n      });\n  };\n\n\n  render() {\n      //console.log(this.props)\n    return (\n      <div >\n        <Dante\n\n            data_storage={{\n                interval: 500,\n                url: ImageUploader.path,\n                method: 'POST',\n                save_handler: this.handleSave,\n            }}\n            content={yhiseditorState}\n            widgets={[\n                ImageBlockConfig({\n                upload_callback: this.handleUpload,\n                upload_handler: this.handleUpload\n                })\n          ]}\n        />\n        <Button onClick={ this.publishArticle}>PUBLISH</Button>\n      </div>\n    );\n  }\n}\n\nCreateArticle.propTypes = {\n    saveArticle: PropTypes.func.isRequired,\n    //errors: PropTypes.object.isRequired,\n    editorState: PropTypes.shape({}).isRequired,\n  };\nconst mapStateToProps = state => ({\n    article: state.article,\n    errors: state.errors\n  });\n\n  export default withRouter(\n    connect(\n      mapStateToProps,\n      { saveArticle }\n    )(CreateArticle)\n  );\n"]},"metadata":{},"sourceType":"module"}