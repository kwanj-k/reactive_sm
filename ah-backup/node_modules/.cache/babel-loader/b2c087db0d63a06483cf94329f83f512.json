{"ast":null,"code":"import { toast } from 'react-toastify';\nimport axiosConfig from '../axiosConfig';\nimport { GET_ERRORS, SAVE_ARTICLE } from './actionTypes';\nexport var saveArticle = function saveArticle(articleData) {\n  return function (dispatch) {\n    var formatData = {\n      article: articleData\n    };\n    axiosConfig.request({\n      method: 'post',\n      url: 'articles',\n      data: formatData\n    }).then(function (res) {\n      //console.log(res)\n      dispatch({\n        type: SAVE_ARTICLE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      cons;\n      toast.error(err.response.data.errors.error[0]);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/actions/createArticleActions.js"],"names":["toast","axiosConfig","GET_ERRORS","SAVE_ARTICLE","saveArticle","articleData","dispatch","formatData","article","request","method","url","data","then","res","type","payload","catch","err","cons","error","response","errors"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,eAAzC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,WAAW;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAClD,QAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEH;AADQ,KAAnB;AAGAJ,IAAAA,WAAW,CACRQ,OADH,CACW;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,GAAG,EAAE,UAFE;AAGPC,MAAAA,IAAI,EAAEL;AAHC,KADX,EAMGM,IANH,CAMQ,UAAAC,GAAG,EAAI;AACX;AACAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEZ,YADC;AAEPa,QAAAA,OAAO,EAAEF,GAAG,CAACF;AAFN,OAAD,CAAR;AAID,KAZH,EAaGK,KAbH,CAaS,UAAAC,GAAG,EAAI;AACVC,MAAAA,IAAI;AACNnB,MAAAA,KAAK,CAACoB,KAAN,CAAYF,GAAG,CAACG,QAAJ,CAAaT,IAAb,CAAkBU,MAAlB,CAAyBF,KAAzB,CAA+B,CAA/B,CAAZ;AACAd,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEb,UADC;AAEPc,QAAAA,OAAO,EAAEE,GAAG,CAACG,QAAJ,CAAaT;AAFf,OAAD,CAAR;AAID,KApBH;AAqBD,GAzBmC;AAAA,CAA/B","sourcesContent":["import { toast } from 'react-toastify';\nimport axiosConfig from '../axiosConfig';\nimport { GET_ERRORS, SAVE_ARTICLE } from './actionTypes';\n\nexport const saveArticle = articleData => dispatch => {\n    const formatData = {\n      article: articleData\n    };\n    axiosConfig\n      .request({\n        method: 'post',\n        url: 'articles',\n        data: formatData\n      })\n      .then(res => {\n        //console.log(res)\n        dispatch({\n          type: SAVE_ARTICLE,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n          cons\n        toast.error(err.response.data.errors.error[0]);\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n  };\n"]},"metadata":{},"sourceType":"module"}