{"ast":null,"code":"import _defineProperty from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { saveArticle } from '../../../actions/createArticleActions';\nimport upload from '../../../utils/ImageUploader';\n\nvar CreateArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateArticle, _Component);\n\n  function CreateArticle() {\n    var _this;\n\n    _classCallCheck(this, CreateArticle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateArticle).call(this));\n\n    _this.getEditorContent = function () {\n      return _this.editor.emitSerializedOutput();\n    };\n\n    _this.getImages = function () {\n      var images = [];\n\n      if (_this.editor) {\n        var _this$getEditorConten = _this.getEditorContent(),\n            blocks = _this$getEditorConten.blocks;\n\n        for (var i = 0; i < blocks.length; i += 1) {\n          var image = null;\n\n          if (blocks[i].type === 'image') {\n            var url = blocks[i].data.url;\n            image = url;\n          }\n\n          if (image) {\n            images.push(image);\n          }\n        }\n      }\n\n      return images;\n    };\n\n    _this.bodyChange = function (state) {\n      _this.editor = state;\n\n      var _this$getEditorConten2 = _this.getEditorContent(),\n          blocks = _this$getEditorConten2.blocks; //console.log(blocks)\n\n\n      for (var i = 0; i < blocks.length; i += 1) {\n        if (blocks[i].type === 'unstyled') {\n          _this.setState(_defineProperty({}, e.target.id, e.target.value));\n\n          console.log(blocks[i].text);\n        }\n      }\n    };\n\n    _this.titleDescriptionChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.handleUpload = function (file, state) {\n      upload({\n        body: file\n      }).then(function (data) {\n        state.uploadCompleted(data.secure_url);\n      });\n    };\n\n    _this.state = {\n      title: '',\n      description: '',\n      body: '',\n      tags: [],\n      image: ''\n    };\n    return _this;\n  }\n\n  _createClass(CreateArticle, [{\n    key: \"handleTagChange\",\n    value: function handleTagChange(tags) {\n      this.setState({\n        tags: tags\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.state)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"title\",\n        onChange: this.titleDescriptionChange,\n        type: \"text\",\n        placeholder: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"description\",\n        onChange: this.titleDescriptionChange,\n        type: \"text\",\n        placeholder: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Dante, {\n        widgets: [ImageBlockConfig({\n          options: {\n            upload_url: 'https://api.cloudinary.com/v1_1/dadrqjrpw/image/upload',\n            upload_callback: this.handleUpload,\n            upload_handler: this.handleUpload\n          }\n        })],\n        onChange: this.bodyChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(TagsInput, {\n        value: this.state.tags,\n        onChange: this.handleTagChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.createArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"PUBLISH\"));\n    }\n  }]);\n\n  return CreateArticle;\n}(Component); // CreateArticle.propTypes = {\n//     saveArticle: PropTypes.func.isRequired,\n//     //errors: PropTypes.object.isRequired,\n//     //editorState: PropTypes.shape({}),\n//   };\n// CreateArticle.defaultProps = {\n//     editorState: PropTypes.shape({}),\n// }\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    article: state.article,\n    errors: state.errors\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  saveArticle: saveArticle\n})(CreateArticle));","map":{"version":3,"sources":["/Users/kwanj-k/sims/ah-the-unsullied-frontend/src/components/articles/createArticle/index.js"],"names":["React","Component","connect","withRouter","TagsInput","ImageBlockConfig","Button","Dante","saveArticle","upload","CreateArticle","getEditorContent","editor","emitSerializedOutput","getImages","images","blocks","i","length","image","type","url","data","push","bodyChange","state","setState","e","target","id","value","console","log","text","titleDescriptionChange","handleUpload","file","body","then","uploadCompleted","secure_url","title","description","tags","options","upload_url","upload_callback","upload_handler","handleTagChange","bind","createArticle","mapStateToProps","article","errors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css'\nimport { ImageBlockConfig } from 'Dante2/package/es/components/blocks/image';\nimport { Button } from 'react-materialize';\nimport Dante from 'Dante2';\nimport { saveArticle } from '../../../actions/createArticleActions';\n\nimport upload from '../../../utils/ImageUploader';\n\n\n\nclass CreateArticle extends Component {\n    constructor() {\n        super();\n        this.state = {\n        title: '',\n        description: '',\n        body: '',\n        tags: [],\n        image: '',\n        }\n    }   \n\n    getEditorContent = () => this.editor.emitSerializedOutput();\n\n    getImages = () => {\n        const images = [];\n        if (this.editor) {\n          const { blocks } = this.getEditorContent();\n    \n          for (let i = 0; i < blocks.length; i += 1) {\n            let image = null;\n            if (blocks[i].type === 'image') {\n              const { data: { url } } = blocks[i];\n              image = url;\n            }\n            if (image) {\n              images.push(image);\n            }\n          }\n        }\n        return images;\n      };\n\n    bodyChange = (state) => {\n        this.editor = state;\n        const { blocks } = this.getEditorContent();\n        //console.log(blocks)\n        for (let i = 0; i < blocks.length; i += 1) {\n            if (blocks[i].type ==='unstyled'){\n                this.setState({ [e.target.id]: e.target.value });\n                console.log(blocks[i].text)\n            }\n        }\n        \n      };\n    \n    handleTagChange(tags) {\n        this.setState({tags})\n    }\n    titleDescriptionChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    handleUpload = (file, state) => {\n        upload({\n          body: file,\n        })\n          .then((data) => {\n            state.uploadCompleted(data.secure_url);\n          });\n      };\n      \n  \n  render() {\n      //console.log(this.state)\n    return (\n    \n      <div >\n        <input\n            id= 'title'\n            onChange={this.titleDescriptionChange}\n            type='text' \n            placeholder='Title'/>\n        <input\n            id= 'description'\n            onChange={this.titleDescriptionChange}\n            type='text' placeholder='Description'/>\n        <Dante\n            widgets={[ImageBlockConfig({\n                options: {\n                    upload_url: 'https://api.cloudinary.com/v1_1/dadrqjrpw/image/upload',\n                    upload_callback: this.handleUpload,\n                    upload_handler: this.handleUpload,\n                }\n            })]}\n            onChange={ this.bodyChange}\n        />\n\n        <TagsInput value={this.state.tags} onChange={ this.handleTagChange.bind(this)} />\n        <Button onClick={ this.createArticle}>PUBLISH</Button>\n      </div>\n    );\n  }\n}\n\n// CreateArticle.propTypes = {\n//     saveArticle: PropTypes.func.isRequired,\n//     //errors: PropTypes.object.isRequired,\n//     //editorState: PropTypes.shape({}),\n//   };\n// CreateArticle.defaultProps = {\n//     editorState: PropTypes.shape({}),\n// }\nconst mapStateToProps = state => ({\n    article: state.article,\n    errors: state.errors\n  });\n\n  export default withRouter(\n    connect(\n      mapStateToProps,\n      { saveArticle }\n    )(CreateArticle)\n  );\n"]},"metadata":{},"sourceType":"module"}